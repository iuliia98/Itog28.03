
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//ИЗМЕНЕНО  Степанов ЮЛ (Начало 26.02.2025)
	
	ДанныеОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, "Договор");

   Если ДанныеОснования.Договор <> Договор Тогда 
		
		ТекстСообщения = "В документе основания - Заказ покупателя выбран другой договор";
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,"Основание","Объект");	
		
		Отказ = Истина;
   КонецЕсли;
   
   //КОНЕЦ Изменений

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
		//ИЗМЕНЕНО  Степанов ЮЛ (Начало 26.02.2025)
		
	Движения.ВКМ_АнализРеализацииУ.Записывать = Истина;
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл 
	 	Движение = Движения.ВКМ_АнализРеализацииУ.Добавить();
        Движение.Период = Дата;
	    Движение.Клиент = Контрагент;
	    Движение.Договор = Договор;
	    Движение.Номенклатура = ТекСтрокаУслуги.Номенклатура;
	    Движение.Сумма = ТекСтрокаУслуги.Сумма;
	КонецЦикла;
	
	  //КОНЕЦ Изменений
	 

КонецПроцедуры


//ИЗМЕНЕНО  Степанов ЮЛ (Начало 26.02.2025)
Процедура ВыполнитьАвтозаполнение() Экспорт
	
	
	ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, ВКМ_АбонентскаяПлата");

	Если ДанныеДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскаяПлата Тогда 
		
		ТекстСообщения = "Необходимо выбрать договор абонентского обслуживания, чтобы воспользоваться командой - заполнить";
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,"Договор","Объект");	
		
		Возврат;
		
	Иначе
		
		НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
		НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатруаРаботыСпециалиста.Получить();
		
		Услуги.Очистить();
		
		   Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) Тогда
               ТекстСообщения = "Установите номенклатуру - Абонентская плата в константе";
	           ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);	
	           Возврат;
		   КонецЕсли;
		
		   Если Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
               ТекстСообщения = "Установите номенклатуру работы специалиста в константе";
	           ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);	
	           Возврат;
		   КонецЕсли;
		   
		 Если ЗначениеЗаполнено(ДанныеДоговора.ВКМ_АбонентскаяПлата) Тогда
            НоваяСтрока = Услуги.Добавить(); 
            НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
            НоваяСтрока.Сумма = ДанныеДоговора.ВКМ_АбонентскаяПлата;
		 КонецЕсли;
		 
		 
		 Запрос = Новый Запрос;
		 Запрос.Текст =
		 	"ВЫБРАТЬ
		 	|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот,
		 	|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.КоличествоЧасовОборот, 0) КАК КоличествоЧасовОборот
		 	|ИЗ
		 	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.ОстаткиИОбороты(&НачалоПериод, &КонецПериода,,,) КАК
		 	|		ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты
		 	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		 	|		ПО ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Договор = РеализацияТоваровУслуг.Договор
		 	|		И ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Клиент = РеализацияТоваровУслуг.Контрагент
		 	|ГДЕ
		 	|	РеализацияТоваровУслуг.Ссылка = &Ссылка";
		 
		 Запрос.УстановитьПараметр("Ссылка", Ссылка);
		 Запрос.УстановитьПараметр("НачалоПериод", НачалоМесяца(Дата));
		 Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
		 
		 РезультатЗапроса = Запрос.Выполнить();
		 
		 ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		 
		// Если  РезультатЗапроса.Пустой() Тогда
		     //Возврат;
	     //КонецЕсли;
		 
		 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            НоваяСтрока = Услуги.Добавить(); 
            НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
            НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасовОборот;
            НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.СуммаКОплатеОборот;
		 КонецЦикла;
		 

	КонецЕсли;
	
	СуммаДокумента = Услуги.Итог("Сумма") + Товары.Итог("Сумма");
	
	
КонецПроцедуры
//КОНЕЦ Изменений


#КонецОбласти

#КонецЕсли
